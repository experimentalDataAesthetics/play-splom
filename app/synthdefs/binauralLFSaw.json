{
  "hasArrayArgs": false,
  "inputs": [],
  "hasGate": false,
  "name": "binauralLFSaw",
  "hasVariants": false,
  "output": [
    {
      "rate": "audio",
      "startingChannel": "out",
      "numberOfChannels": 2,
      "type": "OffsetOut"
    }
  ],
  "controls": [
    {
      "name": "out",
      "defaultValue": 0,
      "lag": 0,
      "rate": "scalar",
      "index": 0
    },
    {
      "name": "amp",
      "defaultValue": 0.10000000149012,
      "lag": 0,
      "rate": "scalar",
      "spec": {
        "default": 0,
        "maxval": 1,
        "class": "ControlSpec",
        "minval": 0,
        "warp": "amp",
        "step": 0,
        "units": ""
      },
      "index": 1
    },
    {
      "name": "freqL",
      "defaultValue": 440,
      "lag": 0,
      "rate": "scalar",
      "spec": {
        "default": 440,
        "maxval": 10000,
        "class": "ControlSpec",
        "minval": 40,
        "warp": "exp",
        "step": 0,
        "units": " Hz"
      },
      "index": 2
    },
    {
      "name": "freqR",
      "defaultValue": 440,
      "lag": 0,
      "rate": "scalar",
      "spec": {
        "default": 440,
        "maxval": 10000,
        "class": "ControlSpec",
        "minval": 40,
        "warp": "exp",
        "step": 0,
        "units": " Hz"
      },
      "index": 3
    },
    {
      "name": "sustain",
      "defaultValue": 0.0099999997764826,
      "lag": 0,
      "rate": "scalar",
      "spec": {
        "default": 1,
        "maxval": 4,
        "class": "ControlSpec",
        "minval": 0.05,
        "warp": "exp",
        "step": 0,
        "units": ""
      },
      "index": 4
    }
  ],
  "canFreeSynth": true,
  "sourceCode": "SynthDef('binauralLFSaw', { |out, amp=0.1, freqL=440, freqR=440, sustain=0.01|var snd = [LFSaw.ar(freqL), LFSaw.ar(freqR)];var amp2 = amp * AmpComp.ir(freqL.max(50)) * 0.5;var env = EnvGen.ar(Env.perc(1.0, 1.0), timeScale: sustain, levelScale: amp2, doneAction: 2);OffsetOut.ar(out, snd * env);})",
  "controlNames": [
    "out",
    "amp",
    "freqL",
    "freqR",
    "sustain"
  ]
}